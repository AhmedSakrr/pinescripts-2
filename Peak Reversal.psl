// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// Â© Zettt
// 2020

//@version=4
study("Peak Reversal", shorttitle="Peak Reversal", overlay=true)

showOnlyFirstSignal = true
keltOrBoll = input(title="Use Bollinger Bands?", type=input.bool, defval=true)
keltnerEMAlength = input(title="Keltner Channel EMA Length", defval=21, minval=1, type=input.integer)
keltnerMultiplier = input(title="Keltner Bands Multiplier", defval=1.25, minval=1, type=input.float)
bollingerSMAlength = input(title="Bollinger Bands SMA Length", defval=20, minval=1, type=input.integer)
bollingerMultiplier = input(title="Bollinger Bands Multiplier", defval=2, minval=1, type=input.float)


// plot bands off by default
atrlength = 14
plot(ema(close, keltnerEMAlength) - (rma(tr(true), atrlength) * keltnerMultiplier), title="Keltner Channel Upper Band", color=#991515, display=display.none)
plot(ema(close, keltnerEMAlength) + (rma(tr(true), atrlength) * keltnerMultiplier), title="Keltner Channel Lower Band", color=#991515, display=display.none)


// long/short when the candle body (not high low) is outside of Keltner channel extremes
downKeltnerBand = ( ema(close, keltnerEMAlength) - (rma(tr(true), atrlength) * keltnerMultiplier) )
upKeltnerBand = ( ema(close, keltnerEMAlength) + (rma(tr(true), atrlength) * keltnerMultiplier) )
// dev = bollingerMultiplier * stdev(close, bollingerSMAlength)
downBollBand = ( sma(close, bollingerSMAlength) - (bollingerMultiplier * stdev(close, bollingerSMAlength)) )
upBollBand = ( sma(close, bollingerSMAlength) + bollingerMultiplier * stdev(close, bollingerSMAlength) )


// long/short condition only when the previous candle is a free bar, and the current candle opened outside, but closed inside
longRejection = keltOrBoll ? close[1] <= downBollBand and low[1] <= downBollBand and low <= downBollBand and close >= downBollBand : close[1] <= downKeltnerBand and low[1] <= downKeltnerBand and low <= downKeltnerBand and close >= downKeltnerBand
shortRejection = keltOrBoll ? close[1] >= upBollBand and high[1] >= upBollBand and high >= upBollBand and close <= upBollBand : close[1] >= upKeltnerBand and high[1] >= upKeltnerBand and high >= upKeltnerBand and close <= upKeltnerBand

showLong = showOnlyFirstSignal ? longRejection and not longRejection[1] : longRejection
showShort = showOnlyFirstSignal ? shortRejection and not shortRejection[1] : shortRejection
plotshape(showLong, title="Reversal ðŸ”º", style=shape.xcross, size=size.tiny, color=#81c784, transp=50, location=location.belowbar)
plotshape(showShort, title="Reversal ðŸ”»", style=shape.xcross, size=size.tiny, color=#e57373, transp=50, location=location.abovebar)

// Plot breakouts
longBreakout = close >= upKeltnerBand and open <= upKeltnerBand
shortBreakout = close <= downKeltnerBand and open >= downKeltnerBand

showLongBreakout = showOnlyFirstSignal ? longBreakout and not longBreakout[1] : longBreakout
showShortBreakout = showOnlyFirstSignal ? shortBreakout and not shortBreakout[1] : shortBreakout

plotshape(showLongBreakout, title="Breakout", style=shape.triangleup, size=size.tiny, color=#81c784, transp=80, location=location.abovebar, display=display.none)
plotshape(showShortBreakout, title="Breakdown", style=shape.triangledown, size=size.tiny, color=#e57373, transp=80, location=location.belowbar, display=display.none)

// Alerts
alertcondition(condition=showLong, title="Reversal ðŸ”º", message="Reversal ðŸ”º")
alertcondition(condition=showShort, title="Reversal ðŸ”»", message="Reversal ðŸ”º")
alertcondition(condition=showLong or showShort, title="Reversal Any", message="Reversal Any")

alertcondition(condition=showLongBreakout, title="Breakout", message="Breakout")
alertcondition(condition=showShortBreakout, title="Breakdown", message="Breakdown")
alertcondition(condition=showLongBreakout or showShortBreakout, title="Breakout or Down", message="Breakout or Down")

alertcondition(condition=showLong or showShort or showLongBreakout or showShortBreakout, title="Peak Reversal Any Change", message="Peak Reversal Any")


